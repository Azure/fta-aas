name: Detect Infrastructure Drift

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.bicep'
  workflow_dispatch:

env:
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  STORAGE_ACCOUNT_NAME: ${{ vars.STORAGE_ACCOUNT_NAME }}
  APP_INSIGHTS_ACCOUNT_NAME: ${{ vars.APP_INSIGHTS_ACCOUNT_NAME }}

jobs:
  detect-drift-staging:
    if: ${{ github.event.pull_request.base.ref == 'main' }}
    name: Detect Drift - Staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: azure/login@v1
        with:
          creds:  ${{ secrets.AZURE_CREDENTIALS }} 
      - name: Detect Drift
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create --name ftaaas --template-file infra/deploytostorageaccount.bicep --parameters accountName=$STORAGE_ACCOUNT_NAME appInsightsName=$APP_INSIGHTS_ACCOUNT_NAME skuName=Standard_LRS -g $RESOURCE_GROUP --what-if
      - name: logout
        run: |
          az logout
        if: always()
  detect-drift-production:
    if: ${{ github.event.pull_request.base.ref == 'production' }}
    name: Detect Drift - Production
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: azure/login@v1
        with:
          creds:  ${{ secrets.AZURE_CREDENTIALS }} 
      - name: Detect Drift
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create --name ftaaas --template-file infra/deploytostorageaccount.bicep --parameters accountName=$STORAGE_ACCOUNT_NAME appInsightsName=$APP_INSIGHTS_ACCOUNT_NAME skuName=Standard_LRS -g $RESOURCE_GROUP --what-if
      - name: logout
        run: |
          az logout
        if: always()
